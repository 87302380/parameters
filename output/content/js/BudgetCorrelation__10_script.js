
  (function() {
    var fn = function() {
      Bokeh.safely(function() {
        (function(root) {
          function embed_document(root) {
            
          var docs_json = '{"5efa8e8c-082a-4ed8-873b-5c6bde3c0bc2":{"roots":{"references":[{"attributes":{"active_drag":"auto","active_inspect":"auto","active_multi":null,"active_scroll":"auto","active_tap":"auto","tools":[{"id":"1029","type":"PanTool"},{"id":"1030","type":"WheelZoomTool"},{"id":"1031","type":"BoxZoomTool"},{"id":"1032","type":"SaveTool"},{"id":"1033","type":"ResetTool"},{"id":"1034","type":"HelpTool"}]},"id":"1035","type":"Toolbar"},{"attributes":{"bounds":[-0.03212551706621967,0.4382480034747468],"callback":null,"end":0.4382480034747468,"start":-0.03212551706621967},"id":"1010","type":"Range1d"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"navy"},"line_alpha":{"value":0.5},"line_color":{"value":"navy"},"size":{"units":"screen","value":5},"x":{"field":"x"},"y":{"field":"y"}},"id":"1045","type":"Circle"},{"attributes":{},"id":"1079","type":"UnionRenderers"},{"attributes":{"children":[{"id":"1007","type":"DataTable"}],"height":140},"id":"1058","type":"WidgetBox"},{"attributes":{"children":[{"id":"1058","type":"WidgetBox"},{"id":"1057","type":"Row"}]},"id":"1059","type":"Column"},{"attributes":{"callback":null,"data":{"budget 243":[null,null,0.00915038095958065,null,null,null,null,0.008005435053947352,null,null,null,null,null,null,0.014832902644248969,null,null,0.007072276312194203,0.00733635083906492,null,null,0.010364268750386985,null,null,0.01687594786482749,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0.010416192820544845,null,null],"budget 27":[null,0.00866212485440876,null,0.008941170529131126,null,null,0.008328567927126329,null,0.01075038382182536,null,null,null,0.008245232910147893,null,null,null,null,0.007072276312194203,0.00733635083906492,null,null,null,null,0.008389331805400801,null,0.008596603806756087,null,0.009149082048977797,0.009170779557908348,0.010447214591313148,0.00832476348313771,0.011714814801877083,null,null,null,0.008776943816715788,null,null,0.007888656449679843,null,0.008635303260006166,null,0.009653945603015246,null,null,null],"budget 81":[null,null,0.00915038095958065,null,null,null,0.008328567927126329,0.008005435053947352,null,null,null,null,0.008245232910147893,0.018445542860961006,null,null,null,0.007072276312194203,0.00733635083906492,null,null,null,0.012260500703620614,null,null,null,0.009914774207987032,null,null,null,0.00832476348313771,null,null,null,null,null,null,0.013144972714912995,0.007888656449679843,null,null,null,null,null,null,null],"budget 9":[0.01042612707519075,0.00866212485440876,null,null,0.009994929866774305,0.011782463702926571,null,null,null,0.011268137155760138,0.016394417783042292,0.02254442934124279,0.008245232910147893,null,null,0.3990502100963329,0.01405019189608403,0.007072276312194203,null,0.016773042945698924,0.01113305951780208,null,null,0.008389331805400801,null,0.008596603806756087,null,0.009149082048977797,0.009170779557908348,null,0.00832476348313771,null,0.013724578325647108,0.009858933934832392,0.010029345256164168,null,0.03117942322061107,null,null,0.010737875971457811,null,0.012561914437756783,0.009653945603015246,null,0.011323395140558135,0.011818225683313699],"x":[0.007072276312194203],"y":[0.007072276312194203]},"selected":{"id":"1078","type":"Selection"},"selection_policy":{"id":"1079","type":"UnionRenderers"}},"id":"1009","type":"ColumnDataSource"},{"attributes":{"source":{"id":"1001","type":"ColumnDataSource"}},"id":"1008","type":"CDSView"},{"attributes":{"bounds":[-0.03212551706621967,0.4382480034747468],"callback":null,"end":0.4382480034747468,"start":-0.03212551706621967},"id":"1011","type":"Range1d"},{"attributes":{},"id":"1030","type":"WheelZoomTool"},{"attributes":{"overlay":{"id":"1037","type":"BoxAnnotation"}},"id":"1031","type":"BoxZoomTool"},{"attributes":{"editor":{"id":"1062","type":"StringEditor"},"field":"Budget","formatter":{"id":"1063","type":"StringFormatter"},"sortable":false,"title":"Budget","width":20},"id":"1002","type":"TableColumn"},{"attributes":{},"id":"1029","type":"PanTool"},{"attributes":{"columns":[{"id":"1002","type":"TableColumn"},{"id":"1003","type":"TableColumn"},{"id":"1004","type":"TableColumn"},{"id":"1005","type":"TableColumn"},{"id":"1006","type":"TableColumn"}],"height":140,"index_position":null,"sortable":false,"source":{"id":"1001","type":"ColumnDataSource"},"view":{"id":"1008","type":"CDSView"}},"id":"1007","type":"DataTable"},{"attributes":{"children":[{"id":"1012","subtype":"Figure","type":"Plot"},{"id":"1056","type":"Column"}]},"id":"1057","type":"Row"},{"attributes":{"below":[{"id":"1019","type":"LinearAxis"}],"left":[{"id":"1024","type":"LinearAxis"}],"match_aspect":true,"plot_height":400,"plot_width":400,"renderers":[{"id":"1019","type":"LinearAxis"},{"id":"1023","type":"Grid"},{"id":"1024","type":"LinearAxis"},{"id":"1028","type":"Grid"},{"id":"1037","type":"BoxAnnotation"},{"id":"1047","type":"GlyphRenderer"}],"title":{"id":"1060","type":"Title"},"toolbar":{"id":"1035","type":"Toolbar"},"x_range":{"id":"1011","type":"Range1d"},"x_scale":{"id":"1015","type":"LinearScale"},"y_range":{"id":"1010","type":"Range1d"},"y_scale":{"id":"1017","type":"LinearScale"}},"id":"1012","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"1032","type":"SaveTool"},{"attributes":{"plot":null,"text":""},"id":"1060","type":"Title"},{"attributes":{},"id":"1033","type":"ResetTool"},{"attributes":{},"id":"1062","type":"StringEditor"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":5},"x":{"field":"x"},"y":{"field":"y"}},"id":"1046","type":"Circle"},{"attributes":{},"id":"1034","type":"HelpTool"},{"attributes":{},"id":"1063","type":"StringFormatter"},{"attributes":{"data_source":{"id":"1009","type":"ColumnDataSource"},"glyph":{"id":"1045","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1046","type":"Circle"},"selection_glyph":null,"view":{"id":"1048","type":"CDSView"}},"id":"1047","type":"GlyphRenderer"},{"attributes":{},"id":"1064","type":"StringEditor"},{"attributes":{"source":{"id":"1009","type":"ColumnDataSource"}},"id":"1048","type":"CDSView"},{"attributes":{"callback":null,"data":{"Budget":["budget 9","budget 27","budget 81","budget 243"],"budget 243":["nan (1 samples)","1.00 (2 samples)","1.00 (4 samples)","1.00 (8 samples)"],"budget 27":["1.00 (9 samples)","1.00 (18 samples)","",""],"budget 81":["1.00 (3 samples)","1.00 (6 samples)","1.00 (12 samples)",""],"budget 9":["1.00 (27 samples)","","",""]},"selected":{"id":"1053","type":"Selection"},"selection_policy":{"id":"1073","type":"UnionRenderers"}},"id":"1001","type":"ColumnDataSource"},{"attributes":{},"id":"1065","type":"StringFormatter"},{"attributes":{"default_sort":"descending","editor":{"id":"1066","type":"StringEditor"},"field":"budget 27","formatter":{"id":"1067","type":"StringFormatter"},"title":"budget 27","width":10},"id":"1004","type":"TableColumn"},{"attributes":{},"id":"1066","type":"StringEditor"},{"attributes":{},"id":"1015","type":"LinearScale"},{"attributes":{"callback":null,"js_property_callbacks":{"change:value":[{"id":"1051","type":"CustomJS"}]},"options":["budget 9","budget 27","budget 81","budget 243"],"title":"X-axis:","value":"budget 9"},"id":"1049","type":"Select"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"1037","type":"BoxAnnotation"},{"attributes":{},"id":"1067","type":"StringFormatter"},{"attributes":{},"id":"1017","type":"LinearScale"},{"attributes":{"args":{"scatter_source":{"id":"1009","type":"ColumnDataSource"},"select_x":{"id":"1049","type":"Select"},"select_y":{"id":"1050","type":"Select"},"xaxis":{"id":"1019","type":"LinearAxis"},"xr":{"id":"1011","type":"Range1d"},"yaxis":{"id":"1024","type":"LinearAxis"},"yr":{"id":"1010","type":"Range1d"}},"code":"var budgets = [&#x27;budget 9&#x27;, &#x27;budget 27&#x27;, &#x27;budget 81&#x27;, &#x27;budget 243&#x27;]; console.log(budgets);try {\\n        row = budgets.indexOf(select_x.value);\\n        col = budgets.indexOf(select_y.value);\\n        \\n            // This is the actual updating of the plot\\n            if (row =&gt;  0 &amp;&amp; col &gt; 0) {\\n              // Copy relevant arrays\\n              var new_x = scatter_source.data[budgets[row]].slice();\\n              var new_y = scatter_source.data[budgets[col]].slice();\\n              // Remove all pairs where one value is null\\n              while ((next_null = new_x.indexOf(null)) &gt; -1) {\\n                new_x.splice(next_null, 1);\\n                new_y.splice(next_null, 1);\\n              }\\n              while ((next_null = new_y.indexOf(null)) &gt; -1) {\\n                new_x.splice(next_null, 1);\\n                new_y.splice(next_null, 1);\\n              }\\n              // Assign new data to the plotted columns\\n              scatter_source.data[&#x27;x&#x27;] = new_x;\\n              scatter_source.data[&#x27;y&#x27;] = new_y;\\n              scatter_source.change.emit();\\n              // Update axis-labels\\n              xaxis.attributes.axis_label = budgets[row];\\n              yaxis.attributes.axis_label = budgets[col];\\n              // Update ranges\\n              var min = Math.min(...[Math.min(...new_x), Math.min(...new_y)])\\n                  max = Math.max(...[Math.max(...new_x), Math.max(...new_y)]);\\n              var padding = (max - min) / 10;\\n              console.log(min, max, padding);\\n              xr.start = min - padding;\\n              yr.start = min - padding;\\n              xr.end = max + padding;\\n              yr.end = max + padding;\\n            }\\n        \\n        } catch(err) {\\n            console.log(err.message);\\n        }\\n        "},"id":"1051","type":"CustomJS"},{"attributes":{},"id":"1068","type":"StringEditor"},{"attributes":{"axis_label":"budget 9","formatter":{"id":"1075","type":"BasicTickFormatter"},"plot":{"id":"1012","subtype":"Figure","type":"Plot"},"ticker":{"id":"1020","type":"BasicTicker"}},"id":"1019","type":"LinearAxis"},{"attributes":{"callback":null,"js_property_callbacks":{"change:value":[{"id":"1051","type":"CustomJS"}]},"options":["budget 9","budget 27","budget 81","budget 243"],"title":"Y-axis:","value":"budget 243"},"id":"1050","type":"Select"},{"attributes":{"default_sort":"descending","editor":{"id":"1064","type":"StringEditor"},"field":"budget 9","formatter":{"id":"1065","type":"StringFormatter"},"title":"budget 9","width":10},"id":"1003","type":"TableColumn"},{"attributes":{},"id":"1069","type":"StringFormatter"},{"attributes":{"children":[{"id":"1054","type":"WidgetBox"},{"id":"1055","type":"WidgetBox"}]},"id":"1056","type":"Column"},{"attributes":{},"id":"1070","type":"StringEditor"},{"attributes":{},"id":"1020","type":"BasicTicker"},{"attributes":{"js_property_callbacks":{"change:indices":[{"id":"1052","type":"CustomJS"}]}},"id":"1053","type":"Selection"},{"attributes":{},"id":"1071","type":"StringFormatter"},{"attributes":{},"id":"1078","type":"Selection"},{"attributes":{"args":{"scatter_source":{"id":"1009","type":"ColumnDataSource"},"select_x":{"id":"1049","type":"Select"},"select_y":{"id":"1050","type":"Select"},"table_source":{"id":"1001","type":"ColumnDataSource"},"xaxis":{"id":"1019","type":"LinearAxis"},"xr":{"id":"1011","type":"Range1d"},"yaxis":{"id":"1024","type":"LinearAxis"},"yr":{"id":"1010","type":"Range1d"}},"code":"var budgets = [&#x27;budget 9&#x27;, &#x27;budget 27&#x27;, &#x27;budget 81&#x27;, &#x27;budget 243&#x27;]; console.log(budgets);try {\\n            // This first part only extracts selected row and column!\\n            var grid = document.getElementsByClassName(&#x27;grid-canvas&#x27;)[0].children;\\n            var row = &#x27;&#x27;;\\n            var col = &#x27;&#x27;;\\n            for (var i=0,max=grid.length;i&lt;max;i++){\\n                if (grid[i].outerHTML.includes(&#x27;active&#x27;)){\\n                    row=i;\\n                    for (var j=0,jmax=grid[i].children.length;j&lt;jmax;j++){\\n                        if(grid[i].children[j].outerHTML.includes(&#x27;active&#x27;)){col=j}\\n                    }\\n                }\\n            }\\n            col = col - 1;\\n            console.log(&#x27;row&#x27;, row, budgets[row]);\\n            console.log(&#x27;col&#x27;, col, budgets[col]);\\n            table_source.selected.indices = [];  // Reset, so gets triggered again when clicked again\\n        \\n        select_x.value = budgets[row];\\n        select_y.value = budgets[col];\\n        \\n            // This is the actual updating of the plot\\n            if (row =&gt;  0 &amp;&amp; col &gt; 0) {\\n              // Copy relevant arrays\\n              var new_x = scatter_source.data[budgets[row]].slice();\\n              var new_y = scatter_source.data[budgets[col]].slice();\\n              // Remove all pairs where one value is null\\n              while ((next_null = new_x.indexOf(null)) &gt; -1) {\\n                new_x.splice(next_null, 1);\\n                new_y.splice(next_null, 1);\\n              }\\n              while ((next_null = new_y.indexOf(null)) &gt; -1) {\\n                new_x.splice(next_null, 1);\\n                new_y.splice(next_null, 1);\\n              }\\n              // Assign new data to the plotted columns\\n              scatter_source.data[&#x27;x&#x27;] = new_x;\\n              scatter_source.data[&#x27;y&#x27;] = new_y;\\n              scatter_source.change.emit();\\n              // Update axis-labels\\n              xaxis.attributes.axis_label = budgets[row];\\n              yaxis.attributes.axis_label = budgets[col];\\n              // Update ranges\\n              var min = Math.min(...[Math.min(...new_x), Math.min(...new_y)])\\n                  max = Math.max(...[Math.max(...new_x), Math.max(...new_y)]);\\n              var padding = (max - min) / 10;\\n              console.log(min, max, padding);\\n              xr.start = min - padding;\\n              yr.start = min - padding;\\n              xr.end = max + padding;\\n              yr.end = max + padding;\\n            }\\n        \\n        } catch(err) {\\n            console.log(err.message);\\n        }\\n        "},"id":"1052","type":"CustomJS"},{"attributes":{"plot":{"id":"1012","subtype":"Figure","type":"Plot"},"ticker":{"id":"1020","type":"BasicTicker"}},"id":"1023","type":"Grid"},{"attributes":{},"id":"1073","type":"UnionRenderers"},{"attributes":{"default_sort":"descending","editor":{"id":"1068","type":"StringEditor"},"field":"budget 81","formatter":{"id":"1069","type":"StringFormatter"},"title":"budget 81","width":10},"id":"1005","type":"TableColumn"},{"attributes":{"children":[{"id":"1049","type":"Select"}]},"id":"1054","type":"WidgetBox"},{"attributes":{"axis_label":"budget 243","formatter":{"id":"1077","type":"BasicTickFormatter"},"plot":{"id":"1012","subtype":"Figure","type":"Plot"},"ticker":{"id":"1025","type":"BasicTicker"}},"id":"1024","type":"LinearAxis"},{"attributes":{},"id":"1075","type":"BasicTickFormatter"},{"attributes":{"default_sort":"descending","editor":{"id":"1070","type":"StringEditor"},"field":"budget 243","formatter":{"id":"1071","type":"StringFormatter"},"title":"budget 243","width":10},"id":"1006","type":"TableColumn"},{"attributes":{},"id":"1025","type":"BasicTicker"},{"attributes":{},"id":"1077","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"1050","type":"Select"}]},"id":"1055","type":"WidgetBox"},{"attributes":{"dimension":1,"plot":{"id":"1012","subtype":"Figure","type":"Plot"},"ticker":{"id":"1025","type":"BasicTicker"}},"id":"1028","type":"Grid"}],"root_ids":["1059"]},"title":"Bokeh Application","version":"1.0.1"}}';
          var render_items = [{"docid":"5efa8e8c-082a-4ed8-873b-5c6bde3c0bc2","roots":{"1059":"caad6200-ec62-4f4d-938b-a40089d2703f"}}];
          root.Bokeh.embed.embed_items(docs_json, render_items);
        
          }
          if (root.Bokeh !== undefined) {
            embed_document(root);
          } else {
            var attempts = 0;
            var timer = setInterval(function(root) {
              if (root.Bokeh !== undefined) {
                embed_document(root);
                clearInterval(timer);
              }
              attempts++;
              if (attempts > 100) {
                console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                clearInterval(timer);
              }
            }, 10, root)
          }
        })(window);
      });
    };
    if (document.readyState != "loading") fn();
    else document.addEventListener("DOMContentLoaded", fn);
  })();
